#!/usr/bin/env node

var path = require("path");
var spawn = require("child_process").spawn;
require('./utils/config')
var theArgs = process.argv.slice(2);
if (theArgs.length < 1) {
  theArgs = ['-r', '.'];
}

var i = 0
var appConfig = null
var pkgInfo = require(path.resolve(__dirname, '..', 'package.json'));
var name = pkgInfo.name;
var productName = pkgInfo.productName;

while (i < theArgs.length && theArgs[i] !== '--app-config') i++;
if (theArgs[i] === '--app-config' && theArgs[i + 1]) {
  try {
    appConfig = JSON.parse(theArgs[i + 1])
  } catch (error) {
    console.error(error.message);
  }
  theArgs.splice(i, 2)
}

if (appConfig && appConfig.packageJSON && appConfig.packageJSON.name)
  name = appConfig.packageJSON.name;
if (appConfig && appConfig.packageJSON && appConfig.packageJSON.productName)
  productName = appConfig.packageJSON.productName;

var target = path.join(process.env.TMPDIR || process.env.TEMP || '/tmp', name + "-build");

// Linux
var cmd = path.join(target, productName, name);

if (process.platform === 'darwin') {
  cmd = path.join(target, productName + '.app', 'Contents', 'MacOS', productName);
}

if (process.platform === 'win32') {
  cmd = path.join(target, productName, productName + '.exe');
}

var toRun = cmd + " " + theArgs.join(" ");
console.log("Running: " + toRun);
var child = spawn(cmd, theArgs);
child.stdout.on('data', function(data) {
  console.log(data.toString());
});
child.stderr.on('data', function(data) {
  console.error(data.toString());
});
child.on('close', function(exitValue) {
  process.exit(exitValue);
});
